{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-48/Documents/joketeller/src/Components/Temp.js\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field } from \"formik\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Temp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      baseUrl: 'https://v2.jokeapi.dev/joke/Any',\n      joke: {},\n      count: 1,\n      isSubmmit: false,\n      idRange: [],\n      singleJike: [],\n      vals: {}\n    };\n    this.sendReq = this.sendReq.bind(this);\n    this.blacks = this.blacks.bind(this);\n  }\n\n  sendReq(formik, lag) {\n    // console.log(this.state.idRange)\n    formik.idRange.to = this.state.idRange[lag][1];\n  }\n\n  blacks(formik) {// console.log(formik)\n  }\n\n  componentDidMount() {\n    this.setState({\n      baseUrl: 'https://v2.jokeapi.dev/joke/Any'\n    });\n    axios.get('https://v2.jokeapi.dev/info').then(response => {\n      this.setState({\n        idRange: response.data.jokes.idRange\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body text-white bg-dark mx-auto w-75 mt-5 border  rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 \",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              category: 'Ane',\n              language: 'en',\n              blacklistFlags: [],\n              type: ['single', 'twopart'],\n              contains: '',\n              idRange: {\n                'from': 0,\n                'to': 319\n              },\n              amount: 1\n            },\n            validate: values => {\n              this.setState({\n                vals: values\n              });\n              if (values.category == 'custom') document.getElementById('category').className = 'border-danger col-6 text-start p-1 border rounded';else document.getElementById('category').className = ' col-6 text-start p-1 border rounded';\n\n              if (values.type.length < 1) {\n                document.getElementById('joketype').className = 'border-danger col-6 text-start p-1 border rounded';\n              } else document.getElementById('joketype').className = ' col-6 text-start p-1 border rounded';\n\n              if (values.amount === 0 || values.amount == '' || values.amount > 10) document.getElementById('amount').className = 'border-danger col-6 text-start p-1 border rounded';else document.getElementById('amount').className = ' col-6 text-start p-1 border rounded';\n            },\n            onSubmit: values => {\n              this.setState({\n                baseUrl: 'https://v2.jokeapi.dev/joke/Any'\n              });\n              this.setState({\n                isSubmmit: true\n              });\n              this.setState({\n                lag: values.language\n              });\n              console.log(this.state.lag);\n              console.log(this.state.baseUrl);\n              let s = '?';\n              if (values.category === 'Any') this.setState({\n                baseUrl: this.state.baseUrl\n              });else {\n                if (values.category === 'custom') {\n                  document.getElementById('category').className = 'border-danger col-6 text-start p-1 border rounded';\n                } else {\n                  this.setState({\n                    baseUrl: 'https://v2.jokeapi.dev/joke' + `/${values.category}`\n                  });\n                  document.getElementById('category').className = ' col-6 text-start p-1 border rounded';\n                }\n              }\n              if (values.language === 'en') this.setState({\n                baseUrl: this.state.baseUrl\n              });else {\n                //   if(this.state.baseUrl.includes('?'))\n                this.setState({\n                  baseUrl: this.state.baseUrl + `${s}lang=${values.language}`\n                });\n                s = '&';\n              }\n\n              if (values.blacklistFlags.length) {\n                this.setState({\n                  baseUrl: this.state.baseUrl + `${s}blacklistFlags=${values.blacklistFlags}`\n                });\n                s = '&';\n              }\n\n              if (values.type.length === 1) {\n                this.setState({\n                  baseUrl: this.state.baseUrl + `${s}type=${values.type}`\n                });\n                s = '&';\n              }\n\n              if (values.contains) {\n                this.setState({\n                  baseUrl: this.state.baseUrl + `${s}contains=${values.contains}`\n                });\n                s = '&';\n              }\n\n              if (this.state.idRange != []) {\n                console.log(this.state.idRange);\n\n                if (values.idRange.to !== this.state.idRange[values.language][1]) {\n                  // console.log(this.state.idRange[values.language][1])\n                  console.log(this.state.idRange);\n                  this.setState({\n                    baseUrl: this.state.baseUrl + `${s}idRange=${values.idRange.from}-${values.idRange.to}`\n                  });\n                  s = '&';\n                }\n              } else console.log('laguage is not selected');\n\n              if (values.amount != 1) {\n                this.setState({\n                  baseUrl: this.state.baseUrl + `${s}amount=${values.amount}`\n                });\n                s = '&';\n              } // console.log(this.state.baseUrl);\n\n\n              axios.get(this.state.baseUrl).then(response => {\n                // console.log(response.data)\n                if (values.amount != 1) this.setState({\n                  joke: response.data.jokes\n                }); // console.log(this.state.joke);\n                else {\n                  this.setState({\n                    joke: response.data\n                  });\n                  console.log(response); // console.log(this.state.joke);\n                }\n              });\n            },\n            children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-4 \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \" text-center text-uppercase\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"mt-2\",\n                    children: \"Joke Teller\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4  text-start \",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"category\",\n                      children: \"Select category/categories\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6 text-start p-1 border rounded \",\n                    id: \"category\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: 'radio',\n                      onChange: formik.handleChange,\n                      id: \"category\",\n                      value: \"Any\",\n                      checked: formik.values.category === 'Any' && true,\n                      name: \"category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Any\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: 'radio',\n                        id: \"category\",\n                        onChange: formik.handleChange,\n                        value: \"custom\",\n                        name: \"category\",\n                        className: \"category\",\n                        checked: formik.values.category !== 'Any' && true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"custom\",\n                        children: \"Custom : \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"w-45 ms-2\",\n                        id: \"category\",\n                        \"data-testid\": \"custom-cat\",\n                        name: \"category\",\n                        type: \"select\",\n                        onChange: formik.handleChange,\n                        value: formik.values.category,\n                        onBlur: formik.handleBlur,\n                        disabled: formik.values.category === 'Any' && true,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Programming\",\n                          children: \"Programming\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Misc\",\n                          children: \"Misc\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Dark\",\n                          children: \"Dark\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Pun\",\n                          children: \"Pun\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Spooky\",\n                          children: \"Spooky\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Christamas\",\n                          children: \"Christamas\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4 text-start \",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"language\",\n                      children: \"Select Language\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6 p-1 text-start border rounded\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"w-45 text-center\",\n                      id: \"language\",\n                      name: \"language\",\n                      type: \"select\",\n                      onChange: formik.handleChange,\n                      onClick: () => this.sendReq(formik.values, formik.values.language),\n                      value: formik.values.language,\n                      onBlur: formik.handleBlur,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"cs\",\n                        children: \"cs - Czech\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"de\",\n                        children: \"de - German\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"en\",\n                        children: \"en - English\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"es\",\n                        children: \"es - Spanish\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"fr\",\n                        children: \"fr - French\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pt\",\n                        children: \"pt - Portuguese\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-3 \",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4 text-start \",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Select  Flags to Blacklist (optional)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6 text-start border rounded\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"blacklistFlags\",\n                      name: \"blacklistFlags\",\n                      onChange: formik.handleChange,\n                      value: \"nsfw\",\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"blacklistFlags\",\n                      children: \"nsfw\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"blacklistFlags\",\n                      name: \"blacklistFlags\",\n                      onChange: formik.handleChange,\n                      value: \"religious\",\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"religious\",\n                      children: \"religious\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"blacklistFlags\",\n                      name: \"blacklistFlags\",\n                      onChange: formik.handleChange,\n                      value: \"political\",\n                      onClick: FormikProps => this.blacks(formik.values),\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"blf-cb3\",\n                      children: \"political\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"blacklistFlags\",\n                      name: \"blacklistFlags\",\n                      onChange: formik.handleChange,\n                      value: \"racist\",\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"racist\",\n                      children: \"racist\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"blacklistFlags\",\n                      name: \"blacklistFlags\",\n                      onChange: formik.handleChange,\n                      value: \"sexist\",\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"sexist\",\n                      children: \"sexist\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"blacklistFlags\",\n                      name: \"blacklistFlags\",\n                      onChange: formik.handleChange,\n                      value: \"explicit\",\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"blacklistFlags\",\n                      children: \"explicit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4 text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"twopart\",\n                      children: \"Select jock type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6 text-start border rounded\",\n                    id: \"joketype\",\n                    style: {\n                      display: 'flex'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"type\",\n                        id: \"single\",\n                        name: \"type\",\n                        onChange: formik.handleChange,\n                        value: \"single\",\n                        checked: formik.values.type.includes('single') && true,\n                        onBlur: formik.handleBlur,\n                        type: \"checkbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"blf-cb1\",\n                        children: \"singel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"  \",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"type\",\n                        name: \"type\",\n                        id: \"twopart\",\n                        onChange: formik.handleChange,\n                        checked: formik.values.type.includes('twopart') && true,\n                        value: \"twopart\",\n                        onBlur: formik.handleBlur,\n                        type: \"checkbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"blf-cb2\",\n                        children: \"twopart\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4 text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Search for a joke that contains this search string:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6 p-1 border rounded\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"w-100 \",\n                      id: \"contains\",\n                      name: \"contains\",\n                      type: \"select\",\n                      onChange: formik.handleChange,\n                      value: formik.values.contains,\n                      onBlur: formik.handleBlur,\n                      type: \"text\",\n                      placeholder: \"(optional)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 49\n                    }, this), formik.errors.contains ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: 'red'\n                      },\n                      children: formik.errors.contains\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 75\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4 text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"idRange\",\n                      children: \"Search for a joke in this ID range:(optional)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6 text-start border rounded\",\n                    style: {\n                      display: 'flex',\n                      padding: '10px'\n                    },\n                    children: [\"(optional)  From: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"idRange\",\n                      style: {\n                        height: '25px',\n                        width: '65px'\n                      },\n                      name: \"idRange\",\n                      onChange: formik.handleChange,\n                      value: formik.values.idRange.from,\n                      onBlur: formik.handleBlur,\n                      type: \"number\",\n                      id: \"idRangeInputFrom\",\n                      min: \"0\",\n                      step: \"1\",\n                      max: \"1368\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 67\n                    }, this), \"To: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"idRange\",\n                      style: {\n                        height: '25px',\n                        width: '65px'\n                      },\n                      name: \"idRange\",\n                      onChange: formik.handleChange,\n                      value: formik.values.idRange.to,\n                      onBlur: formik.handleBlur,\n                      type: \"number\",\n                      min: \"0\",\n                      max: formik.values.idRange.to\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4 text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"amount\",\n                    className: \"col-6 text-start border p-1 rounded\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"amount\",\n                      style: {\n                        marginTop: '10px',\n                        height: '25px',\n                        width: '65px'\n                      },\n                      name: \"amount\",\n                      \"data-testid\": \"amount\",\n                      onChange: formik.handleChange,\n                      value: formik.values.amount,\n                      onBlur: formik.handleBlur,\n                      type: \"number\",\n                      min: \"1\",\n                      step: \"1\",\n                      max: \"10\",\n                      onChange: formik.handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row border mt-2 w-75 me-5 ms-1 text-start rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"URL :\", /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"text-primary\",\n                      children: this.state.baseUrl\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \" mt-2 p-1 ps-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"me-2 rounded\",\n                      onClick: () => {\n                        let s;\n                        s = window.confirm('do you want reset form');\n                        s && window.location.reload();\n                      },\n                      children: \"Reset Form\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"rounded\" // onClick={() => this.sendReq(formik.values)}\n                      ,\n                      children: [\"Send Request \", `>`, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row border ms-1  bg-black rounded mt-1 \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result text-start\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [`</>`, \"Result\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                  className: \"border border-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 41\n                }, this), this.state.isSubmmit == true ? this.state.joke.error == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row \",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"col-md-6\",\n                    children: this.state.joke.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 49\n                }, this) : formik.values.amount == 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-start\",\n                  children: [console.log(this.state.joke), this.state.joke.type === 'single' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row \",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"col-md-6\",\n                      children: this.state.joke.joke\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"----------------------------------------------\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 61\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row \",\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"col-md-6\",\n                        children: this.state.joke.setup\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      id: this.state.joke.id,\n                      style: {\n                        display: 'none'\n                      },\n                      children: this.state.joke.delivery\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      id: 1,\n                      onClick: () => {\n                        document.getElementById(this.state.joke.id).style.display = 'block';\n                        document.getElementById(1).style.display = 'none';\n                      },\n                      children: \" show answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"----------------------------------------------\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 49\n                }, this) : this.state.joke.length && this.state.joke.map((j, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-start\",\n                  children: [console.log(j), j.type === 'single' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row \",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"col-md-6\",\n                      children: j.joke\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"----------------------------------------------\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 73\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 69\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row \",\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"col-md-6\",\n                        children: j.setup\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 77\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      id: j.id,\n                      style: {\n                        display: 'none'\n                      },\n                      children: j.delivery\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      id: j.id + 1,\n                      onClick: () => {\n                        document.getElementById(j.id).style.display = 'block';\n                        document.getElementById(j.id + 1).style.display = 'none';\n                      },\n                      children: \" show answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"----------------------------------------------\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 73\n                    }, this)]\n                  }, void 0, true)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 57\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"(Set parameters and click \\\"Send Request\\\" above)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Temp;","map":{"version":3,"sources":["/home/am-pc-48/Documents/joketeller/src/Components/Temp.js"],"names":["React","Component","Formik","Form","Field","axios","Temp","constructor","props","state","baseUrl","joke","count","isSubmmit","idRange","singleJike","vals","sendReq","bind","blacks","formik","lag","to","componentDidMount","setState","get","then","response","data","jokes","render","category","language","blacklistFlags","type","contains","amount","values","document","getElementById","className","length","console","log","s","from","handleChange","handleBlur","FormikProps","display","includes","errors","color","padding","height","width","marginTop","window","confirm","location","reload","error","message","setup","id","delivery","style","map","j","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Form, Field } from \"formik\";\nimport axios from 'axios';\nclass Temp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            baseUrl: 'https://v2.jokeapi.dev/joke/Any',\n            joke: {},\n            count: 1,\n            isSubmmit: false,\n            idRange: [],\n            singleJike: [],\n            vals:{}\n\n        };\n        this.sendReq = this.sendReq.bind(this);\n        this.blacks = this.blacks.bind(this);\n\n    }\n\n    sendReq(formik, lag) {\n        // console.log(this.state.idRange)\n\n        formik.idRange.to = this.state.idRange[lag][1]\n\n\n\n\n    }\n    blacks(formik) {\n        // console.log(formik)\n    }\n    componentDidMount() {\n        this.setState({ baseUrl: 'https://v2.jokeapi.dev/joke/Any' })\n        axios.get('https://v2.jokeapi.dev/info')\n            .then((response) => {\n\n                this.setState({ idRange: response.data.jokes.idRange })\n\n\n            })\n\n\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"card-body text-white bg-dark mx-auto w-75 mt-5 border  rounded\">\n\n                <div className=\"row \">\n                    <div className=\"col-lg-12 \">\n                        <Formik initialValues={{\n                            category: 'Ane',\n                            language: 'en',\n                            blacklistFlags: [],\n                            type: ['single', 'twopart'],\n                            contains: '',\n                            idRange: { 'from': 0, 'to': 319 },\n                            amount: 1\n                        }}\n                     validate ={(values)=>{\n                         this.setState({vals:values})\n  \n                            if(values.category == 'custom')\n                                document.getElementById('category').className = 'border-danger col-6 text-start p-1 border rounded'\n                            else\n                                document.getElementById('category').className = ' col-6 text-start p-1 border rounded'\n                            if(values.type.length<1 ){\n                                document.getElementById('joketype').className = 'border-danger col-6 text-start p-1 border rounded'\n                            }else\n                                document.getElementById('joketype').className = ' col-6 text-start p-1 border rounded'\n                            if(values.amount === 0 || values.amount == '' || values.amount>10)\n                                document.getElementById('amount').className = 'border-danger col-6 text-start p-1 border rounded'\n                            else\n                                document.getElementById('amount').className = ' col-6 text-start p-1 border rounded'\n                            }\n\n                          }\n                         \n                            onSubmit={(values) => {\n                                this.setState({ baseUrl: 'https://v2.jokeapi.dev/joke/Any' })\n                                this.setState({ isSubmmit: true })\n                                this.setState({ lag: values.language })\n                                console.log(this.state.lag);\n                                console.log(this.state.baseUrl);\n                                let s = '?'\n                                if (values.category === 'Any')\n                                    this.setState({ baseUrl: this.state.baseUrl })\n                                else {\n                                    if (values.category === 'custom') {\n\n                                        document.getElementById('category').className = 'border-danger col-6 text-start p-1 border rounded'\n\n                                    }\n\n                                    else {\n                                        this.setState({ baseUrl: 'https://v2.jokeapi.dev/joke' + `/${values.category}` })\n                                        document.getElementById('category').className = ' col-6 text-start p-1 border rounded'\n                                    }\n                                }\n\n\n                                if (values.language === 'en')\n                                    this.setState({ baseUrl: this.state.baseUrl })\n                                else {\n\n\n                                    //   if(this.state.baseUrl.includes('?'))\n                                    this.setState({ baseUrl: this.state.baseUrl + `${s}lang=${values.language}` })\n                                    s = '&';\n                                }\n                                if (values.blacklistFlags.length) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}blacklistFlags=${values.blacklistFlags}`) })\n                                    s = '&';\n                                }\n\n                                if (values.type.length === 1) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}type=${values.type}`) })\n                                    s = '&';\n                                }\n                                if (values.contains) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}contains=${values.contains}`) })\n                                    s = '&';\n                                }\n                                if (this.state.idRange != []) {\n                                    console.log(this.state.idRange)\n                                    if (values.idRange.to !== this.state.idRange[values.language][1]) {\n                                        // console.log(this.state.idRange[values.language][1])\n                                        console.log(this.state.idRange)\n                                        this.setState({ baseUrl: this.state.baseUrl + (`${s}idRange=${values.idRange.from}-${values.idRange.to}`) })\n                                        s = '&';\n                                    }\n                                } else\n                                    console.log('laguage is not selected')\n\n\n                                if (values.amount != 1) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}amount=${values.amount}`) })\n                                    s = '&';\n                                }\n\n                                // console.log(this.state.baseUrl);\n                                axios.get(this.state.baseUrl)\n                                    .then((response) => {\n                                        // console.log(response.data)\n                                        if (values.amount != 1)\n                                            this.setState({ joke: response.data.jokes })\n                                        // console.log(this.state.joke);\n                                        else {\n                                            this.setState({ joke: response.data })\n                                            console.log(response);\n                                            // console.log(this.state.joke);\n                                        }\n\n                                    })\n                            }\n                            } >\n\n                            {(formik) => (\n                                <div>\n                                    {/* {console.log(formik)} */}\n                                    {/* {console.log(this.setState({count: formik.values.category}))} */}\n                                    <div className=\"row mb-4 \">\n                                        <div className=\" text-center text-uppercase\">\n                                            <h1 className=\"mt-2\">Joke Teller</h1>\n                                        </div>\n                                    </div>\n                                    <Form>\n                                        <div className='row mb-3'>\n                                            <div className='col-4  text-start '>\n                                                <label htmlFor=\"category\">Select category/categories</label>\n                                            </div>\n                                            <div className='col-6 text-start p-1 border rounded ' id='category'>\n                                                <input type={'radio'}\n                                                    onChange={formik.handleChange}\n                                                    id=\"category\"\n                                                    value='Any'\n                                                    checked={(formik.values.category) === 'Any' && true}\n                                                    name='category' />\n                                                <label>Any</label>\n\n\n                                                <div>\n                                                    <input type={'radio'} id=\"category\"\n                                                        onChange={formik.handleChange}\n                                                        value='custom'\n                                                        name='category' \n                                                        className='category'\n                                                        checked={(formik.values.category) !== 'Any' && true}\n                                                        />\n                                                         \n                                                    <label htmlFor=\"custom\">Custom : </label>\n                                                    <select\n                                                        className='w-45 ms-2'\n                                                        id=\"category\"\n                                                        data-testid='custom-cat'\n                                                        name=\"category\"\n                                                        type=\"select\"\n                                                        onChange={formik.handleChange}\n                                                        value={formik.values.category}\n                                                        onBlur={formik.handleBlur} \n                                                        disabled={(formik.values.category) === 'Any' && true}\n                                                    >\n                                                        <option value=\"Programming\">Programming</option>\n                                                        <option value=\"Misc\">Misc</option>\n                                                        <option value=\"Dark\">Dark</option>\n                                                        <option value=\"Pun\">Pun</option>\n                                                        <option value=\"Spooky\">Spooky</option>\n                                                        <option value=\"Christamas\">Christamas</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/* {console.log(formik.values)} */}\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start '>\n                                                <label htmlFor=\"language\">Select Language</label>\n                                            </div>\n                                            <div className='col-6 p-1 text-start border rounded'>\n                                                <select className='w-45 text-center'\n                                                    id=\"language\"\n                                                    name=\"language\"\n                                                    type=\"select\"\n                                                    onChange={formik.handleChange}\n                                                    onClick={() => this.sendReq(formik.values, formik.values.language)}\n                                                    value={formik.values.language}\n                                                    onBlur={formik.handleBlur}>\n                                                    <option value=\"cs\">cs - Czech</option>\n                                                    <option value=\"de\">de - German</option>\n                                                    <option value=\"en\">en - English</option>\n                                                    <option value=\"es\">es - Spanish</option>\n                                                    <option value=\"fr\">fr - French</option>\n                                                    <option value=\"pt\">pt - Portuguese</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div className='row mb-3 '>\n                                            <div className='col-4 text-start '>\n                                                <label htmlFor=\"email\">Select  Flags to Blacklist (optional)</label>\n                                            </div>\n                                            <div className='col-6 text-start border rounded' >\n                                                <input id=\"blacklistFlags\"\n\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='nsfw'\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blacklistFlags\">nsfw</label>\n\n\n\n                                                <input id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='religious'\n\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"religious\">religious</label>\n\n\n                                                <input id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='political'\n                                                    onClick={(FormikProps) => this.blacks(formik.values)}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blf-cb3\">political</label>\n\n                                                <input\n                                                    id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value=\"racist\"\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"racist\">racist</label>\n\n\n                                                <input\n                                                    id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='sexist'\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"sexist\">sexist</label>\n\n                                                <input\n                                                    id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='explicit'\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blacklistFlags\">explicit</label>\n\n                                            </div>\n                                        </div>\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"twopart\">Select jock type</label>\n                                            </div>\n                                            <div className='col-6 text-start border rounded'  id='joketype' style={{ display: 'flex' }}>\n                                                <div className=' '>\n                                                    <input id=\"type\"\n                                                        id='single'\n                                                        name=\"type\"\n                                                        onChange={formik.handleChange}\n                                                        value='single'\n                                                        checked={(formik.values.type).includes('single') && true}\n                                                        onBlur={formik.handleBlur} type=\"checkbox\" />\n                                                    <label htmlFor=\"blf-cb1\">singel</label>\n                                                </div>\n\n                                                <div className='  '>\n                                                    <input id=\"type\"\n                                                        name=\"type\"\n                                                        id='twopart'\n                                                        onChange={formik.handleChange}\n                                                        checked={(formik.values.type).includes('twopart') && true}\n                                                        value='twopart'\n                                                        onBlur={formik.handleBlur} type=\"checkbox\" />\n                                                    <label htmlFor=\"blf-cb2\">twopart</label>\n                                                </div>\n                                            </div>\n                                        </div >\n\n\n                                        <div className='row mb-3' >\n\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"email\">Search for a joke that contains this search string:</label>\n\n                                            </div>\n                                            <div className='col-6 p-1 border rounded'>\n\n                                                <input\n                                                    className='w-100 '\n                                                    id=\"contains\"\n                                                    name=\"contains\"\n                                                    type=\"select\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.contains}\n                                                    onBlur={formik.handleBlur} type=\"text\" placeholder='(optional)' />\n                                                {formik.errors.contains ? <div style={{ color: 'red' }}>{formik.errors.contains}</div> : null}\n                                            </div>\n\n                                        </div>\n\n                                        <div className='row mb-3'>\n                                            {/* <div className=\"multiselect noselect\" id=\"idRangeWrapper\" style={{ borderColor: 'initial' }}> */}\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"idRange\">Search for a joke in this ID range:(optional)</label>\n\n                                            </div>\n\n                                            <div className='col-6 text-start border rounded' style={{ display: 'flex', padding: '10px' }}>\n\n                                                (optional)  From: <input id=\"idRange\"\n\n                                                    style={{ height: '25px', width: '65px' }}\n                                                    name=\"idRange\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.idRange.from}\n                                                    onBlur={formik.handleBlur} type=\"number\" id=\"idRangeInputFrom\" min=\"0\" step=\"1\" max=\"1368\" />\n\n\n                                                To: <input id=\"idRange\"\n\n                                                    style={{ height: '25px', width: '65px' }}\n                                                    name=\"idRange\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.idRange.to}\n                                                    onBlur={formik.handleBlur} type=\"number\"  \n                                                    min=\"0\"  max= {formik.values.idRange.to} />\n\n\n                                            </div>\n                                        </div>\n\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start' >\n                                                <label htmlFor=\"email\">Amount</label>\n                                            </div>\n\n                                            <div id='amount' className='col-6 text-start border p-1 rounded'>\n                                                <input id=\"amount\"\n                                                    style={{ marginTop: '10px', height: '25px', width: '65px' }}\n                                                    name=\"amount\"\n                                                    data-testid='amount'\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.amount}\n                                                    onBlur={formik.handleBlur} type=\"number\" \n                                                     min=\"1\" step=\"1\" max=\"10\"\n                                                    onChange={formik.handleChange} >\n                                                </input>\n                                            </div>\n                                        </div>\n\n\n\n                                        <div className='row border mt-2 w-75 me-5 ms-1 text-start rounded'>\n                                            <span>URL :\n                                                <label className='text-primary'>\n                                                    {this.state.baseUrl}\n\n                                                </label>\n                                            </span>\n                                            <span className=' mt-2 p-1 ps-2'>\n                                                <button className='me-2 rounded' onClick={() => {let s; s=window.confirm('do you want reset form'); s&&window.location.reload() }}>Reset Form</button>\n                                                <button type=\"submit\" className='rounded'\n                                                // onClick={() => this.sendReq(formik.values)}\n                                                >\n                                                    Send Request {`>`} </button>\n                                            </span>\n                                        </div>\n                                    </Form>\n\n\n                                    {/* --------------------------------------------------Result------------------------------------------------ */}\n                                    <div className='row border ms-1  bg-black rounded mt-1 '>\n                                        <div className='result text-start'>\n                                            <h5>{`</>`}Result</h5>\n\n\n\n                                        </div>\n                                        <hr className='border border-primary'></hr>\n\n\n\n                                        {/* {console.log(this.state.joke)} */}\n                                        {this.state.isSubmmit == true ?(\n\n                                            this.state.joke.error == true ? (\n                                                <div className=\"row \">\n                                                    <label className='col-md-6'>{this.state.joke.message}</label>\n                                                    {/* <label>no matching data found</label> */}\n                                                    <br />\n                                                </div>\n                                            ) : \n                                            (\n                                            formik.values.amount == 1 ? (\n                                                <div className='text-start'>\n                                                    {console.log(this.state.joke)}\n                                                    {this.state.joke.type === 'single' ?\n                                                        (\n                                                            <div className=\"row \">\n                                                                <label className='col-md-6'>{this.state.joke.joke}</label>\n                                                                <br />\n                                                                <label>----------------------------------------------</label>\n                                                            </div>\n\n                                                        )\n                                                        :\n                                                        (\n                                                            <>\n                                                                <div className=\"row \">\n                                                                    <label className='col-md-6'>{this.state.joke.setup}</label>\n\n                                                                </div>\n                                                                <label id={this.state.joke.id} style={{ display: 'none' }}>{this.state.joke.delivery}</label>\n                                                                <button id={1} onClick={() => {\n                                                                    document.getElementById(this.state.joke.id).style.display = 'block';\n                                                                    document.getElementById(1).style.display = 'none'\n                                                                }}> show answer</button>\n\n                                                                <br />\n                                                                <label>----------------------------------------------</label>\n                                                            </>\n                                                        )\n                                                    }\n\n                                                </div>\n\n                                            ) : (\n\n                                                this.state.joke.length &&\n                                                    this.state.joke.map((j, index) => (\n\n                                                        <div key={index} className='text-start'>\n                                                            {console.log(j)}\n                                                            {j.type === 'single' ?\n                                                                (\n                                                                    <div className=\"row \">\n                                                                        <label className='col-md-6'>{j.joke}</label>\n                                                                        <br />\n                                                                        <label>----------------------------------------------</label>\n                                                                    </div>\n\n                                                                )\n                                                                :\n                                                                (\n                                                                    <>\n                                                                        <div className=\"row \">\n                                                                            <label className='col-md-6'>{j.setup}</label>\n\n                                                                        </div>\n                                                                        <label id={j.id} style={{ display: 'none' }}>{j.delivery}</label>\n                                                                        <button id={j.id + 1} onClick={() => { document.getElementById(j.id).style.display = 'block'; document.getElementById(j.id + 1).style.display = 'none'; }}> show answer</button>\n\n                                                                        <br />\n                                                                        <label>----------------------------------------------</label>\n                                                                    </>\n                                                                )\n                                                            }\n\n                                                        </div>\n                                                    )\n                                                )\n\n                                            )\n\n\n                                            )\n\n                                        ):\n                                        (\n                                            <div>\n                                                <label>(Set parameters and click \"Send Request\" above)</label>\n                                            </div>\n                                        )\n                                        }\n\n                                    </div>\n\n                                    {/*----------------------------------------------End---------------------------------------------------------  */}\n\n                                </div>\n\n\n\n\n                            )}\n                        </Formik>\n                        {/* ==========================================Result =========================================== */}\n\n\n                    </div>\n\n                </div>\n\n\n\n            </div>\n\n\n        );\n    }\n}\nexport default Temp;"]},"metadata":{},"sourceType":"module"}