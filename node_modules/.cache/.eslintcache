[{"/home/am-pc-48/Documents/joketeller/src/index.js":"1","/home/am-pc-48/Documents/joketeller/src/App.js":"2","/home/am-pc-48/Documents/joketeller/src/reportWebVitals.js":"3","/home/am-pc-48/Documents/joketeller/src/Components/Temp.js":"4","/home/am-pc-48/Documents/joketeller/src/Components/Form1.js":"5","/home/am-pc-48/Documents/joketeller/src/Components/Login.js":"6"},{"size":500,"mtime":1642576179485,"results":"7","hashOfConfig":"8"},{"size":571,"mtime":1643373658118,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1642576179489,"results":"10","hashOfConfig":"8"},{"size":31657,"mtime":1643712032114,"results":"11","hashOfConfig":"8"},{"size":32889,"mtime":1643359960370,"results":"12","hashOfConfig":"8"},{"size":20335,"mtime":1643096467538,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ovfr98",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/am-pc-48/Documents/joketeller/src/index.js",[],["30","31"],"/home/am-pc-48/Documents/joketeller/src/App.js",["32","33","34","35","36"],"import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Form1 from './Components/Form1';\nimport Login from './Components/Login';\nimport Temp from './Components/Temp';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Temp />\n\n      {/* <Form1 /> */}\n    {/* <Router>\n        <Routes>\n    \n        <Route  path=\"/\" element={<Login />} />\n            <Route  path=\"/\" element={<Form1 />} />\n        </Routes>\n        </Router> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/am-pc-48/Documents/joketeller/src/reportWebVitals.js",[],"/home/am-pc-48/Documents/joketeller/src/Components/Temp.js",["37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"/home/am-pc-48/Documents/joketeller/src/Components/Form1.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],"import React, { Component } from 'react';\nimport { Formik, Form, Field } from \"formik\";\nimport axios from 'axios';\nclass Temp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            baseUrl: 'https://v2.jokeapi.dev/joke/Any',\n            baseUrl1: 'https://v2.jokeapi.dev/joke/Any',\n            joke: {},\n            count: 1,\n            isSubmmit: false,\n            idRange: [],\n            flag:false,\n            singleJike: []\n\n        };\n        this.sendReq = this.sendReq.bind(this);\n        this.blacks = this.blacks.bind(this);\n\n    }\n\n    sendReq(formik, lag) {\n        // console.log(this.state.idRange)\n\n        formik.idRange.to = this.state.idRange[lag][1]\n      this.state.flag=true\n\n\n\n    }\n    blacks(formik) {\n        // console.log(formik)\n    }\n    componentDidMount() {\n        this.setState({ baseUrl: 'https://v2.jokeapi.dev/joke/Any' })\n        axios.get('https://v2.jokeapi.dev/info')\n            .then((response) => {\n\n                this.setState({ idRange: response.data.jokes.idRange })\n\n\n            })\n\n\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"card-body text-white bg-dark mx-auto w-75 mt-5 border  rounded\">\n\n                <div className=\"row \">\n                    <div className=\"col-lg-12 \">\n                        <Formik initialValues={{\n                            category: 'Any',\n                            language: 'en',\n                            blacklistFlags: [],\n                            type: ['single', 'twopart'],\n                            contains: '',\n                            idRange: { 'from': 0, 'to': 319 },\n                            amount: '1'\n                        }}\n                     validate ={(values)=>{\n                      this.setState({ baseUrl1: 'https://v2.jokeapi.dev/joke/Any' })\n                      let s = '?'\n                      if (values.language === 'en')\n                      this.setState({ baseUrl1: this.state.baseUrl1 })\n                  else {\n\n\n                      //   if(this.state.baseUrl.includes('?'))\n                      this.setState({ baseUrl1: this.state.baseUrl1 + `${s}lang=${values.language}` })\n                      s = '&';\n                  }\n                  if (values.blacklistFlags.length) {\n                      this.setState({ baseUrl1: this.state.baseUrl1 + (`${s}blacklistFlags=${values.blacklistFlags}`) })\n                      s = '&';\n                  }\n\n                  if (values.type.length === 1) {\n                      this.setState({ baseUrl1: this.state.baseUrl1 + (`${s}type=${values.type}`) })\n                      s = '&';\n                  }\n                  if (values.contains) {\n                      this.setState({ baseUrl1: this.state.baseUrl1 + (`${s}contains=${values.contains}`) })\n                      s = '&';\n                  }\n                  if (this.state.flag) {\n                      console.log(this.state.idRange)\n                      if (values.idRange.to !== this.state.idRange[values.language][1]) {\n                          // console.log(this.state.idRange[values.language][1])\n                          console.log(this.state.idRange)\n                          this.setState({ baseUrl1: this.state.baseUrl1 + (`${s}idRange=${values.idRange.from}-${values.idRange.to}`) })\n                          s = '&';\n                      }\n                  } else\n                      console.log('laguage is not selected')\n\n\n                  if (values.amount != 1) {\n                      this.setState({ baseUrl1: this.state.baseUrl + (`${s}amount=${values.amount}`) })\n                      s = '&';\n                  }\n\n                            if(values.category == 'custom')\n                                document.getElementById('category').className = 'border-danger col-6 text-start p-1 border rounded'\n                            else\n                                document.getElementById('category').className = ' col-6 text-start p-1 border rounded'\n                            if(values.type.length<1 ){\n                                document.getElementById('joketype').className = 'border-danger col-6 text-start p-1 border rounded'\n                            }else\n                                document.getElementById('joketype').className = ' col-6 text-start p-1 border rounded'\n                            if(values.amount === 0 || values.amount == '' || values.amount>10)\n                                document.getElementById('amount').className = 'border-danger col-6 text-start p-1 border rounded'\n                            else\n                                document.getElementById('amount').className = ' col-6 text-start p-1 border rounded'\n                            }\n\n                     }\n\n                            onSubmit={(values) => {\n                                this.setState({ baseUrl: 'https://v2.jokeapi.dev/joke/Any' })\n                                this.setState({ isSubmmit: true })\n                                this.setState({ lag: values.language })\n                                console.log(this.state.lag);\n                                console.log(this.state.baseUrl);\n                                let s = '?'\n                                if (values.category === 'Any')\n                                    this.setState({ baseUrl: this.state.baseUrl })\n                                else {\n                                    if (values.category === 'custom') {\n\n                                        document.getElementById('category').className = 'border-danger col-6 text-start p-1 border rounded'\n\n                                    }\n\n                                    else {\n                                        this.setState({ baseUrl: 'https://v2.jokeapi.dev/joke' + `/${values.category}` })\n                                        document.getElementById('category').className = ' col-6 text-start p-1 border rounded'\n                                    }\n                                }\n\n\n                                if (values.language === 'en')\n                                    this.setState({ baseUrl: this.state.baseUrl })\n                                else {\n\n\n                                    //   if(this.state.baseUrl.includes('?'))\n                                    this.setState({ baseUrl: this.state.baseUrl + `${s}lang=${values.language}` })\n                                    s = '&';\n                                }\n                                if (values.blacklistFlags.length) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}blacklistFlags=${values.blacklistFlags}`) })\n                                    s = '&';\n                                }\n\n                                if (values.type.length === 1) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}type=${values.type}`) })\n                                    s = '&';\n                                }\n                                if (values.contains) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}contains=${values.contains}`) })\n                                    s = '&';\n                                }\n                                if (this.state.idRange !== []) {\n                                    console.log(this.state.idRange)\n                                    if (values.idRange.to !== this.state.idRange[values.language][1]) {\n                                        // console.log(this.state.idRange[values.language][1])\n                                        console.log(this.state.idRange)\n                                        this.setState({ baseUrl: this.state.baseUrl + (`${s}idRange=${values.idRange.from}-${values.idRange.to}`) })\n                                        s = '&';\n                                    }\n                                } else\n                                    console.log('laguage is not selected')\n\n\n                                if (values.amount != 1) {\n                                    this.setState({ baseUrl: this.state.baseUrl + (`${s}amount=${values.amount}`) })\n                                    s = '&';\n                                }\n\n                                // console.log(this.state.baseUrl);\n                                axios.get(this.state.baseUrl)\n                                    .then((response) => {\n                                        // console.log(response.data)\n                                        if (values.amount != 1)\n                                            this.setState({ joke: response.data.jokes })\n                                        // console.log(this.state.joke);\n                                        else {\n                                            this.setState({ joke: response.data })\n                                            console.log(response);\n                                        }\n\n\n\n                                    })\n                            }\n                            } >\n\n\n\n\n                            {(formik) => (\n                                <div>\n                                    {/* {console.log(formik)} */}\n                                    {/* {console.log(this.setState({count: formik.values.category}))} */}\n                                    <div className=\"row mb-4 \">\n                                        <div className=\" text-center text-uppercase\">\n                                            <h1 className=\"mt-2\">Joke Teller</h1>\n                                        </div>\n                                    </div>\n                                    <Form>\n                                        <div className='row mb-3'>\n                                            <div className='col-4  text-start '>\n                                                <label htmlFor=\"category\">Select category/categories</label>\n                                            </div>\n                                            <div className='col-6 text-start p-1 border rounded ' id='category'>\n                                                <input type={'radio'}\n                                                    onChange={formik.handleChange}\n                                                    id=\"category\"\n                                                    value='Any'\n                                                    checked={(formik.values.category) === 'Any' && true}\n                                                    name='category' />\n                                                <label>Any</label>\n\n\n                                                <div>\n                                                    <input type={'radio'} id=\"category\"\n                                                        onChange={formik.handleChange}\n                                                        value='custom'\n                                                        name='category' />\n                                                    <label htmlFor=\"custom\">Custom : </label>\n                                                    <select\n                                                        className='w-45 ms-2'\n                                                        id=\"category\"\n                                                        name=\"category\"\n                                                        type=\"select\"\n                                                        onChange={formik.handleChange}\n                                                        value={formik.values.category}\n                                                        onBlur={formik.handleBlur} \n                                                        disabled={(formik.values.category) === 'Any' && true}\n                                                    >\n                                                        <option value=\"Programming\">Programming</option>\n                                                        <option value=\"Misc\">Misc</option>\n                                                        <option value=\"Dark\">Dark</option>\n                                                        <option value=\"Pun\">Pun</option>\n                                                        <option value=\"Spooky\">Spooky</option>\n                                                        <option value=\"Christamas\">Christamas</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/* {console.log(formik.values)} */}\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start '>\n                                                <label htmlFor=\"language\">Select Language</label>\n                                            </div>\n                                            <div className='col-6 p-1 text-start border rounded'>\n                                                <select className='w-45 text-center'\n                                                    id=\"language\"\n                                                    name=\"language\"\n                                                    type=\"select\"\n                                                    onChange={formik.handleChange}\n                                                    onClick={() => this.sendReq(formik.values, formik.values.language)}\n                                                    value={formik.values.language}\n                                                    onBlur={formik.handleBlur}>\n                                                    <option value=\"cs\">cs - Czech</option>\n                                                    <option value=\"de\">de - German</option>\n                                                    <option value=\"en\">en - English</option>\n                                                    <option value=\"es\">es - Spanish</option>\n                                                    <option value=\"fr\">fr - French</option>\n                                                    <option value=\"pt\">pt - Portuguese</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div className='row mb-3 '>\n                                            <div className='col-4 text-start '>\n                                                <label htmlFor=\"email\">Select  Flags to Blacklist (optional)</label>\n                                            </div>\n                                            <div className='col-6 text-start border rounded' >\n                                                <input id=\"blacklistFlags\"\n\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='nsfw'\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blacklistFlags\">nsfw</label>\n\n\n\n                                                <input id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='religious'\n\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"religious\">religious</label>\n\n\n                                                <input id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='political'\n                                                    onClick={(FormikProps) => this.blacks(formik.values)}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blf-cb3\">political</label>\n\n                                                <input\n                                                    id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value=\"racist\"\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"racist\">racist</label>\n\n\n                                                <input\n                                                    id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='sexist'\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"sexist\">sexist</label>\n\n                                                <input\n                                                    id=\"blacklistFlags\"\n                                                    name=\"blacklistFlags\"\n                                                    onChange={formik.handleChange}\n                                                    value='explicit'\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blacklistFlags\">explicit</label>\n\n                                            </div>\n                                        </div>\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"twopart\">Select jock type</label>\n                                            </div>\n                                            <div className='col-6 text-start border rounded' id='joketype' style={{ display: 'flex' }}>\n                                                <div className=' '>\n                                                    <input id=\"type\"\n                                                        name=\"type\"\n                                                        onChange={formik.handleChange}\n                                                        value='single'\n                                                        checked={(formik.values.type).includes('single') && true}\n                                                        onBlur={formik.handleBlur} type=\"checkbox\" />\n                                                    <label htmlFor=\"blf-cb1\">singel</label>\n                                                </div>\n\n                                                <div className='  '>\n                                                    <input id=\"type\"\n                                                        name=\"type\"\n                                                        onChange={formik.handleChange}\n                                                        checked={(formik.values.type).includes('twopart') && true}\n                                                        value='twopart'\n                                                        onBlur={formik.handleBlur} type=\"checkbox\" />\n                                                    <label htmlFor=\"blf-cb2\">twopart</label>\n                                                </div>\n                                            </div>\n                                        </div >\n\n\n                                        <div className='row mb-3' >\n\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"email\">Search for a joke that contains this search string:</label>\n\n                                            </div>\n                                            <div className='col-6 p-1 border rounded'>\n\n                                                <input\n                                                    className='w-100 '\n                                                    id=\"contains\"\n                                                    name=\"contains\"\n                                                    type=\"select\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.contains}\n                                                    onBlur={formik.handleBlur} type=\"text\" placeholder='(optional)' />\n                                                {formik.errors.contains ? <div style={{ color: 'red' }}>{formik.errors.contains}</div> : null}\n                                            </div>\n\n                                        </div>\n\n                                        <div className='row mb-3'>\n                                            {/* <div className=\"multiselect noselect\" id=\"idRangeWrapper\" style={{ borderColor: 'initial' }}> */}\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"idRange\">Search for a joke in this ID range:(optional)</label>\n\n                                            </div>\n\n                                            <div className='col-6 text-start border rounded' style={{ display: 'flex', padding: '10px' }}>\n\n                                                (optional)  From: <input id=\"idRange\"\n\n                                                    style={{ height: '25px', width: '65px' }}\n                                                    name=\"idRange\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.idRange.from}\n                                                    onBlur={formik.handleBlur} type=\"number\" id=\"idRangeInputFrom\" min=\"0\" step=\"1\" max=\"1368\" />\n\n\n                                                To: <input id=\"idRange\"\n\n                                                    style={{ height: '25px', width: '65px' }}\n                                                    name=\"idRange\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.idRange.to}\n                                                    onBlur={formik.handleBlur} type=\"number\"  \n                                                    min=\"0\" step=\"1\" max= {formik.values.idRange.to} />\n\n\n                                            </div>\n                                        </div>\n\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start' >\n                                                <label htmlFor=\"email\">Amount of jokes:</label>\n                                            </div>\n\n                                            <div id='amount' className='col-6 text-start border p-1 rounded'>\n                                                <input id=\"amount\"\n                                                    style={{ marginTop: '10px', height: '25px', width: '65px' }}\n                                                    name=\"amount\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.amount}\n                                                    onBlur={formik.handleBlur} type=\"number\" \n                                                     min=\"1\" step=\"1\" max=\"10\"\n                                                    onChange={formik.handleChange} >\n                                                </input>\n                                            </div>\n                                        </div>\n\n\n\n                                        <div className='row border mt-2 w-75 me-5 ms-1 text-start rounded'>\n                                            <span>URL :\n                                                <label className='text-primary'>\n                                                    {this.state.baseUrl1}\n\n                                                </label>\n                                            </span>\n                                            <span className=' mt-2 p-1 ps-2'>\n                                                <button className='me-2 rounded' onClick={() => { window.location.reload() }}>Reset Form</button>\n                                                <button type=\"submit\" className='rounded'\n                                                // onClick={() => this.sendReq(formik.values)}\n                                                >\n                                                    Send Request {`>`} </button>\n                                            </span>\n                                        </div>\n                                    </Form>\n\n\n                                    {/* --------------------------------------------------Result------------------------------------------------ */}\n                                    <div className='row border ms-1  bg-black rounded mt-1 '>\n                                        <div className='result text-start'>\n                                            <h5>{`</>`}Result</h5>\n\n\n\n                                        </div>\n                                        <hr className='border border-primary'></hr>\n\n\n\n                                        {/* {console.log(formik.values.amount)} */}\n                                        {this.state.isSubmmit == true ?(\n\n                                            this.state.joke.error == true ? (\n                                                <div className=\"row \">\n                                                    <label className='col-md-6'>{this.state.joke.message}</label>\n                                                    {/* <label>no matching data found</label> */}\n                                                    <br />\n                                                </div>\n                                            ) : \n                                            (\n                                            formik.values.amount == 1 ? (\n                                                <div className='text-start'>\n                                                    {console.log(this.state.joke)}\n                                                    {this.state.joke.type === 'single' ?\n                                                        (\n                                                            <div className=\"row \">\n                                                                <label className='col-md-6'>{this.state.joke.joke}</label>\n                                                                <br />\n                                                                <label>----------------------------------------------</label>\n                                                            </div>\n\n                                                        )\n                                                        :\n                                                        (\n                                                            <>\n                                                                <div className=\"row \">\n                                                                    <label className='col-md-6'>{this.state.joke.setup}</label>\n\n                                                                </div>\n                                                                <label id={this.state.joke.id} style={{ display: 'none' }}>{this.state.joke.delivery}</label>\n                                                                <button id={1} onClick={() => {\n                                                                    document.getElementById(this.state.joke.id).style.display = 'block';\n                                                                    document.getElementById(1).style.display = 'none'\n                                                                }}> show answer</button>\n\n                                                                <br />\n                                                                <label>----------------------------------------------</label>\n                                                            </>\n                                                        )\n                                                    }\n\n                                                </div>\n\n                                            ) : (\n\n                                                this.state.joke.length &&\n                                                    this.state.joke.map((j, index) => (\n\n                                                        <div key={index} className='text-start'>\n                                                            {console.log(j)}\n                                                            {j.type === 'single' ?\n                                                                (\n                                                                    <div className=\"row \">\n                                                                        <label className='col-md-6'>{j.joke}</label>\n                                                                        <br />\n                                                                        <label>----------------------------------------------</label>\n                                                                    </div>\n\n                                                                )\n                                                                :\n                                                                (\n                                                                    <>\n                                                                        <div className=\"row \">\n                                                                            <label className='col-md-6'>{j.setup}</label>\n\n                                                                        </div>\n                                                                        <label id={j.id} style={{ display: 'none' }}>{j.delivery}</label>\n                                                                        <button id={j.id + 1} onClick={() => { document.getElementById(j.id).style.display = 'block'; document.getElementById(j.id + 1).style.display = 'none'; }}> show answer</button>\n\n                                                                        <br />\n                                                                        <label>----------------------------------------------</label>\n                                                                    </>\n                                                                )\n                                                            }\n\n                                                        </div>\n                                                    )\n                                                )\n\n                                            )\n\n\n                                            )\n\n                                        ):\n                                        (\n                                            <div>\n                                                <label>(Set parameters and click \"Send Request\" above)</label>\n                                            </div>\n                                        )\n                                        }\n\n                                    </div>\n\n                                    {/*----------------------------------------------End---------------------------------------------------------  */}\n\n                                </div>\n\n\n\n\n                            )}\n                        </Formik>\n                        {/* ==========================================Result =========================================== */}\n\n\n                    </div>\n\n                </div>\n\n\n\n            </div>\n\n\n        );\n    }\n}\nexport default Temp;","/home/am-pc-48/Documents/joketeller/src/Components/Login.js",["68","69","70","71","72","73","74","75","76"],"import React, { Component } from 'react';\nimport { Formik, Form, Field } from \"formik\";\nimport axios from 'axios';\n\n\nclass Joke extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            baseUrl: 'https://v2.jokeapi.dev/joke',\n            count: 1,\n        };\n\n        this.sendReq = this.sendReq.bind(this);\n        this.blacks = this.blacks.bind(this);\n\n    }\n\n\n\n    sendReq(formik) {\n        console.log(formik);\n        axios.get('https://v2.jokeapi.dev/joke/Any')\n        .then(response => this.setState({ count: response.data }));\n    }\n\n    blacks(formik) {\n        this.setState({ count: 2 })\n\n        \n        console.log(formik.target.value);\n        \n\n    }\n    render() {\n        \n        console.log(this.state.count);\n\n        \n\n        return (\n            <div className=\"card-body text-white bg-dark mx-auto w-75 mt-5 border  rounded\">\n                <div className=\"row \">\n                    <div className=\"col-lg-12 \">\n                        <Formik initialValues={{\n                            category: '',\n                            language: '',\n                            blacklistFlags: { 'nsfw': false, 'religious': false, 'political': false, 'racist': false, 'sexist': false, 'explicit': false },\n                            type: { 'single': true, 'twopart': true },\n                            conatains: '',\n                            idRange: { 'from': 0, 'to': 1368 },\n                            amount: '1'\n                        }}\n                            onSubmit={(values) => {\n                                console.log(values)\n                                alert(\"Form is validated! Submitting the form...\")\n                            }\n                            } >\n                            {(formik) => (\n                                <div>\n                                    {/* {console.log(this.setState({count: formik.values.category}))} */}\n                                    <div className=\"row mb-4 \">\n                                        <div className=\"col-lg-12 text-center text-uppercase\">\n                                            <h1 className=\"mt-2\">Joke Teller</h1>\n                                        </div>\n                                    </div>\n                                    <Form>\n                                        <div className='row mb-3'>\n                                            <div className='col-4  text-start '>\n                                                <label htmlFor=\"category\">Select category/categories</label>\n                                            </div>\n                                            <div className='col-4 text-start p-1 border rounded'>\n                                                <input type={'radio'} />\n                                                <label>Any</label>\n                                                <div>\n                                                    <input type={'radio'} id='custom' />\n                                                    <label htmlFor=\"custom\">Custom : </label>\n\n                                                    <select\n                                                        className='w-75 ms-2'\n                                                        id=\"category\"\n                                                        name=\"category\"\n                                                        type=\"select\"\n                                                        onChange={formik.handleChange}\n                                                        value={formik.values.category}\n                                                        onBlur={formik.handleBlur} disabled={false}\n                                                    >\n                                                        <option value=\"Programming\">Programming</option>\n                                                        <option value=\"Misc\">Misc</option>\n                                                        <option value=\"Dark\">Dark</option>\n                                                        <option value=\"Pun\">Pun</option>\n                                                        <option value=\"Spooky\">Spooky</option>\n                                                        <option value=\"Christamas\">Christamas</option>\n\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {console.log(formik.values)}\n\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start '>\n                                                <label htmlFor=\"language\">Select Language</label>\n                                            </div>\n                                            <div className='col-3 p-1 text-start border rounded'>\n                                                <select className='w-100 text-center'\n                                                    id=\"language\"\n                                                    name=\"language\"\n                                                    type=\"select\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.language}\n                                                    onBlur={formik.handleBlur}>\n                                                    <option value=\"cs\">cs - Czech</option>\n                                                    <option value=\"de\">de - German</option>\n                                                    <option value=\"en\">en - English</option>\n                                                    <option value=\"es\">es - Spanish</option>\n                                                    <option value=\"fr\">fr - French</option>\n                                                    <option value=\"pt\">pt - Portuguese</option>\n                                                </select>\n                                            </div>\n                                        </div>\n\n\n                                        <div className='row mb-3 '>\n                                            <div className='col-4 text-start '>\n                                                <label htmlFor=\"email\">Select  Flags to Blacklist (optional)</label>\n                                            </div>\n                                            <div className='col-1 p-1 text-start border border-end-0 rounded'>\n                                                <input id=\"blacklistFlags.nsfw\"\n                                                    name=\"blacklistFlags.nsfw\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.blacklistFlags.nsfw}\n                                                    checked={formik.values.blacklistFlags.nsfw}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blacklistFlags.nsfw\">nsfw</label>\n\n                                            </div>\n\n                                            <div className='col-1 p-1 border p-0 border-start-0 border-end-0 rounded'>\n                                                <input id=\"blacklistFlags.religious\"\n                                                    name=\"blacklistFlags.religious\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.blacklistFlags.religious}\n                                                    checked={formik.values.blacklistFlags.religious}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"religious\">religious</label>\n\n                                            </div>\n                                            <div className='col-1 p-1  border border-start-0 border-end-0 rounded'>\n\n                                                <input id=\"blacklistFlags.political\"\n                                                    name=\"blacklistFlags.political\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.blacklistFlags.political}\n                                                    onClick={(FormikProps) =>this.blacks(FormikProps)}\n\n                                                    checked={formik.values.blacklistFlags.political}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blf-cb3\">political</label>\n                                            </div>\n\n\n                                            <div className='col-1 p-1 border border-start-0 border-end-0 rounded'>\n\n                                                <input\n                                                    id=\"blacklistFlags.racist\"\n                                                    name=\"blacklistFlags.racist\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.blacklistFlags.racist}\n                                                    checked={formik.values.blacklistFlags.racist}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"racist\">racist</label>\n                                            </div>\n\n                                            <div className='col-1 p-1 border border-start-0 border-end-0 rounded'>\n                                                <input\n                                                    id=\"blacklistFlags.sexist\"\n                                                    name=\"blacklistFlags.sexist\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.blacklistFlags.sexist}\n                                                    checked={formik.values.blacklistFlags.sexist}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"sexist\">sexist</label>\n                                            </div>\n                                            <div className='col-1 p-1 border border-start-0 rounded'>\n                                                <input\n                                                    id=\"blacklistFlags.explicit\"\n                                                    name=\"blacklistFlags.explicit\"\n                                                    onChange={formik.handleChange}\n                                                    defaultValue={formik.values.blacklistFlags.explicit}\n                                                    checked={formik.values.blacklistFlags.explicit}\n                                                    type=\"checkbox\" />\n                                                <label htmlFor=\"blacklistFlags.explicit\">explicit</label>\n                                            </div>\n                                        </div>\n                                        <div className='row mb-3' >\n\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"twopart\">Select jock type</label>\n                                            </div>\n\n                                            <div className='col-1 p-1 text-start border rounded'>\n                                                <input id=\"type.single\"\n                                                    name=\"type.single\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.type.single}\n                                                    checked={formik.values.type.single}\n                                                    onBlur={formik.handleBlur} type=\"checkbox\" id=\"blf-cb1\" /><label htmlFor=\"blf-cb1\">singel</label>\n                                            </div>\n\n                                            <div className='col-1 p-1 text-start border rounded'>\n                                                <input id=\"type.twopart\"\n                                                    name=\"type.twopart\"\n                                                    onChange={formik.handleChange}\n                                                    checked={formik.values.type.twopart}\n                                                    value={formik.values.type.twopart}\n                                                    onBlur={formik.handleBlur} type=\"checkbox\" id=\"blf-cb2\" />\n                                                <label htmlFor=\"blf-cb2\">twopart</label>\n                                            </div>\n\n                                        </div >\n\n\n                                        <div className='row mb-3' >\n\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"email\">Search for a joke that contains this search string:</label>\n\n                                            </div>\n                                            <div className='col-6 p-1 border rounded'>\n\n                                                <input\n                                                    className='w-100 '\n                                                    id=\"conatains\"\n                                                    name=\"conatains\"\n                                                    type=\"select\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.conatains}\n                                                    onBlur={formik.handleBlur} type=\"text\" placeholder='(optional)' />\n                                                {formik.errors.conatains ? <div style={{ color: 'red' }}>{formik.errors.conatains}</div> : null}\n                                            </div>\n\n                                        </div>\n\n                                        <div className='row mb-3'>\n                                            {/* <div className=\"multiselect noselect\" id=\"idRangeWrapper\" style={{ borderColor: 'initial' }}> */}\n                                            <div className='col-4 text-start'>\n                                                <label htmlFor=\"idRange\">Search for a joke in this ID range:(optional)</label>\n\n                                            </div>\n\n\n                                            <div className='col-3 text-start p-1 border border-end-0 rounded'>\n                                                (optional) &nbsp;&nbsp; From: <input id=\"idRange.from\"\n                                                    className='w-50'\n                                                    name=\"idRange.from\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.idRange.from}\n                                                    onBlur={formik.handleBlur} type=\"number\" id=\"idRangeInputFrom\" min=\"0\" step=\"1\" max=\"1368\" />\n\n                                            </div>\n\n                                            <div className='col-2 text-start p-1 border border-start-0 rounded '>\n                                                To: <input id=\"idRange.to\"\n                                                    className='w-75'\n                                                    name=\"idRange.to\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.idRange.to}\n                                                    onBlur={formik.handleBlur} type=\"number\" id=\"idRangeInputTo\" min=\"0\" step=\"1\" max=\"1368\" />\n\n                                            </div>\n                                            {/* </div> */}\n                                        </div>\n\n                                        <div className='row mb-3' >\n                                            <div className='col-4 text-start' >\n                                                <label htmlFor=\"email\">Number of jokes:</label>\n                                            </div>\n\n                                            <div className='col-1 border p-1 rounded'>\n                                                <input id=\"amount\"\n                                                    className='w-100'\n                                                    name=\"amount\"\n                                                    onChange={formik.handleChange}\n                                                    value={formik.values.amount}\n                                                    onBlur={formik.handleBlur} type=\"number\" id=\"jokesAmountInput\" min=\"1\" step=\"1\"\n                                                    onChange={formik.handleChange} max=\"10\">\n                                                </input>\n                                            </div>\n                                        </div>\n\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block mt-1\">\n                                            Submit</button>\n                                    </Form>\n                                    <div className='row border mt-2 w-75 me-5 ms-1 text-start rounded'>\n                                        <span>URL :\n                                            <label className='text-primary'>\n                                                {`\n                                            ${this.state.baseUrl}${formik.values.category ? '/' + formik.values.category : ''}\n                                            ${formik.values.language ? '?lang=' + formik.values.language : ''}\n                                            \n                                            `}                                                </label>\n                                        </span>\n                                        <span className=' mt-2 p-1 ps-2'>\n                                            <button className='me-2 rounded'>Reset Form</button>\n                                            <button className='rounded' onClick={() => this.sendReq(formik.values)}>Send Request {`>`} </button>\n                                        </span>\n                                    </div>\n                                    {console.log(formik.values)}\n\n                                    {/* --------------------------------------------------Result------------------------------------------------ */}\n                                    <div className='row border ms-1  bg-black rounded mt-1 '>\n                                        <div className='result text-start'>\n                                            <h5>{`</>`}Result</h5>\n\n\n\n                                        </div>\n                                        <hr className='border border-primary'></hr>\n\n                                    </div>\n\n                                    {/*----------------------------------------------End---------------------------------------------------------  */}\n\n                                </div>\n\n\n\n\n                            )}\n                        </Formik>\n                        {/* ==========================================Result =========================================== */}\n\n\n                    </div>\n\n                </div>\n\n\n\n            </div>\n\n\n        );\n    }\n}\nexport default Joke;",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":33},{"ruleId":"81","severity":1,"message":"85","line":1,"column":35,"nodeType":"83","messageId":"84","endLine":1,"endColumn":40},{"ruleId":"81","severity":1,"message":"86","line":1,"column":42,"nodeType":"83","messageId":"84","endLine":1,"endColumn":48},{"ruleId":"81","severity":1,"message":"87","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"88","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":13},{"ruleId":"81","severity":1,"message":"89","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"90","line":2,"column":24,"nodeType":"83","messageId":"84","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":64,"column":48,"nodeType":"93","messageId":"94","endLine":64,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":72,"column":69,"nodeType":"93","messageId":"94","endLine":72,"endColumn":71},{"ruleId":"95","severity":1,"message":"96","line":97,"column":96,"nodeType":"93","messageId":"97","endLine":97,"endColumn":97},{"ruleId":"91","severity":1,"message":"98","line":125,"column":56,"nodeType":"93","messageId":"94","endLine":125,"endColumn":58},{"ruleId":"91","severity":1,"message":"98","line":137,"column":51,"nodeType":"93","messageId":"94","endLine":137,"endColumn":53},{"ruleId":"91","severity":1,"message":"98","line":146,"column":59,"nodeType":"93","messageId":"94","endLine":146,"endColumn":61},{"ruleId":"99","severity":1,"message":"100","line":303,"column":57,"nodeType":"101","messageId":"102","endLine":303,"endColumn":68},{"ruleId":"99","severity":1,"message":"100","line":315,"column":57,"nodeType":"101","messageId":"102","endLine":315,"endColumn":69},{"ruleId":"99","severity":1,"message":"100","line":341,"column":80,"nodeType":"101","messageId":"102","endLine":341,"endColumn":91},{"ruleId":"99","severity":1,"message":"100","line":362,"column":94,"nodeType":"101","messageId":"102","endLine":362,"endColumn":115},{"ruleId":"99","severity":1,"message":"100","line":392,"column":53,"nodeType":"101","messageId":"102","endLine":392,"endColumn":83},{"ruleId":"91","severity":1,"message":"92","line":430,"column":63,"nodeType":"93","messageId":"94","endLine":430,"endColumn":65},{"ruleId":"91","severity":1,"message":"92","line":432,"column":67,"nodeType":"93","messageId":"94","endLine":432,"endColumn":69},{"ruleId":"91","severity":1,"message":"92","line":440,"column":66,"nodeType":"93","messageId":"94","endLine":440,"endColumn":68},{"ruleId":"81","severity":1,"message":"89","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"90","line":2,"column":24,"nodeType":"83","messageId":"84","endLine":2,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":27,"column":7,"nodeType":"105","messageId":"106","endLine":27,"endColumn":17},{"ruleId":"91","severity":1,"message":"98","line":102,"column":37,"nodeType":"93","messageId":"94","endLine":102,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":107,"column":48,"nodeType":"93","messageId":"94","endLine":107,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":115,"column":69,"nodeType":"93","messageId":"94","endLine":115,"endColumn":71},{"ruleId":"95","severity":1,"message":"96","line":140,"column":96,"nodeType":"93","messageId":"97","endLine":140,"endColumn":97},{"ruleId":"91","severity":1,"message":"98","line":180,"column":51,"nodeType":"93","messageId":"94","endLine":180,"endColumn":53},{"ruleId":"91","severity":1,"message":"98","line":189,"column":59,"nodeType":"93","messageId":"94","endLine":189,"endColumn":61},{"ruleId":"99","severity":1,"message":"100","line":381,"column":80,"nodeType":"101","messageId":"102","endLine":381,"endColumn":91},{"ruleId":"99","severity":1,"message":"100","line":402,"column":94,"nodeType":"101","messageId":"102","endLine":402,"endColumn":115},{"ruleId":"99","severity":1,"message":"100","line":431,"column":53,"nodeType":"101","messageId":"102","endLine":431,"endColumn":83},{"ruleId":"91","severity":1,"message":"92","line":469,"column":63,"nodeType":"93","messageId":"94","endLine":469,"endColumn":65},{"ruleId":"91","severity":1,"message":"92","line":471,"column":67,"nodeType":"93","messageId":"94","endLine":471,"endColumn":69},{"ruleId":"91","severity":1,"message":"92","line":479,"column":66,"nodeType":"93","messageId":"94","endLine":479,"endColumn":68},{"ruleId":"81","severity":1,"message":"89","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"90","line":2,"column":24,"nodeType":"83","messageId":"84","endLine":2,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":209,"column":96,"nodeType":"101","messageId":"102","endLine":209,"endColumn":108},{"ruleId":"99","severity":1,"message":"100","line":218,"column":96,"nodeType":"101","messageId":"102","endLine":218,"endColumn":108},{"ruleId":"99","severity":1,"message":"100","line":240,"column":80,"nodeType":"101","messageId":"102","endLine":240,"endColumn":91},{"ruleId":"99","severity":1,"message":"100","line":260,"column":94,"nodeType":"101","messageId":"102","endLine":260,"endColumn":115},{"ruleId":"99","severity":1,"message":"100","line":270,"column":94,"nodeType":"101","messageId":"102","endLine":270,"endColumn":113},{"ruleId":"99","severity":1,"message":"100","line":287,"column":94,"nodeType":"101","messageId":"102","endLine":287,"endColumn":115},{"ruleId":"99","severity":1,"message":"100","line":288,"column":53,"nodeType":"101","messageId":"102","endLine":288,"endColumn":83},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Routes' is defined but never used.","'Form1' is defined but never used.","'Login' is defined but never used.","'Component' is defined but never used.","'Field' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-global-assign","no-unsafe-negation"]